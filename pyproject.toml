[tool.poetry]
name = "advent-of-code"
version = "0.1.2"
description = "Results and work for the 'Advent of code' challenge."
authors = ["X Y <x@y.com>"]
readme = "README.md"
repository = "https://github.com/gijswobben/advent-of-code"
packages = [{ include = "aoc", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
click = "^8.1.3"

browser-cookie3 = "^0.19.1"
jinja2 = "^3.1.4"
pyfiglet = "^1.0.2"
httpx = "^0.28.1"
numpy = "^2.2.0"
[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
mypy = "^0.991"
ruff = "^0.1.6"
pytest-cov = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
aoc = 'aoc.cli:cli'


[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F", "W", "C", "N", "D", "COM", "ASYNC", "I"]
ignore = [
    "D211", # 'no-blank-line-before-class'
    "D213", # 'multi-line-summary-second-line'
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["C", "D", "COM", "I"]
unfixable = []

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = "--cov=."
